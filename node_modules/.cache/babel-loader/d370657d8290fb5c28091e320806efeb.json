{"ast":null,"code":"import _toConsumableArray from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\Employee.jsx\";\nimport { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Tooltip, FormControl, Input, InputAdornment } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport React, { Component, useState, useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getFlatRootChild, getAllByRoot, deleteItem, searchEmployee, createEmployee, saveItem, getItemById, getAllItem, deleteCheckItem } from './EmployeeService';\nimport EmployeeDialog from './EmployeeDialog';\nimport { Breadcrumb, ConfirmationDialog } from 'egret';\nimport { Helmet } from 'react-helmet';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\";\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup';\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: '-15px',\n      left: '-30px',\n      width: '80px'\n    }\n  };\n})(Tooltip);\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"none_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LightTooltip, {\n    title: t('general.editIcon'),\n    placement: \"right-end\",\n    enterDelay: 300,\n    leaveDelay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"edit\"))), /*#__PURE__*/React.createElement(LightTooltip, {\n    title: t('general.deleteIcon'),\n    placement: \"right-end\",\n    enterDelay: 300,\n    leaveDelay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"delete\"))));\n}\n\nvar Employee = /*#__PURE__*/function (_React$Component) {\n  _inherits(Employee, _React$Component);\n\n  var _super = _createSuper(Employee);\n\n  function Employee(props) {\n    var _this;\n\n    _classCallCheck(this, Employee);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      openDialog: false,\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      keyword: '',\n      shouldOpenNotificationPopup: false,\n      Notification: ''\n    };\n\n    _this.handleOpenDialog = function () {\n      _this.setState({\n        openDialog: true\n      });\n    };\n\n    _this.handleChangeNewEmployee = function (name) {\n      return function (event) {\n        _this.setState({\n          newEmployee: _objectSpread(_objectSpread({}, _this.state.newEmployee), {}, {\n            [name]: event.target.value\n          })\n        });\n      };\n    };\n\n    _this.handleSaveNewEmployee = function () {\n      // Lưu trữ dữ liệu mới và đóng dialog\n      _this.props.saveNewEmployee(_this.state.newEmployee);\n\n      _this.handleCloseDialog();\n    };\n\n    _this.handleCloseDialog = function () {\n      _this.setState({\n        openDialog: false\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenNotificationPopup: false,\n        data: []\n      }, function () {\n        _this.updatePageData();\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      if (_this.state.itemList.length === 1 && _this.state.page === 1) {\n        var count = _this.state.page - 1;\n\n        _this.setState({\n          page: count\n        });\n      }\n\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      console.log(\"khanhdialog\");\n\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDeleteButtonClick = function () {\n      if (typeof _this.state.data === 'undefined' || _this.state.data.length === 0) {\n        _this.setState({\n          shouldOpenNotificationPopup: true,\n          Notification: \"general.noti_check_data\"\n        }); // alert('Chưa chọn dữ liệu')\n\n      } else {\n        _this.setState({\n          shouldOpenConfirmationDeleteAllDialog: true\n        });\n      }\n    };\n\n    _this.handleDeleteAll = function (event) {\n      _this.handleDeleteList(_this.state.data).then(function () {\n        _this.updatePageData(); // this.handleDialogClose()\n\n      });\n    };\n\n    _this.state = {\n      employees: [],\n      showForm: false,\n      name: \"\",\n      email: \"\",\n      age: \"\",\n      address: \"\",\n      code: \"\",\n      commune: \"\",\n      district: \"\",\n      province: \"\"\n    };\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Employee, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: // handleKeyDownEnterSearch = (e) => {\n    //   if (e.key === 'Enter') {\n    //     this.search()\n    //   }\n    // }\n    function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var searchObject, employee;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                searchObject = {\n                  name: '',\n                  id: '',\n                  email: '',\n                  age: '',\n                  code: '',\n                  phone: ''\n                }; // assume we have an employee ID\n\n                _context.next = 3;\n                return searchEmployee(searchObject);\n\n              case 3:\n                employee = _context.sent;\n                this.setState({\n                  employee: employee\n                });\n                console.log(\"khanh\");\n                searchEmployee({}).then(function (res) {\n                  console.log(res.data.data);\n\n                  _this2.setState({\n                    employees: res.data.data\n                  });\n                });\n                this.updatePageData();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getListItemChild\",\n    value: function getListItemChild(item) {\n      var _this3 = this;\n\n      var result = [];\n      var root = {};\n      root.name = item.name;\n      root.description = item.description;\n      root.code = item.code;\n      root.icon = item.icon;\n      root.path = item.path;\n      root.id = item.id;\n      root.parentId = item.parentId;\n      result.push(root);\n\n      if (item.children) {\n        item.children.forEach(function (child) {\n          var childs = _this3.getListItemChild(child);\n\n          result.push.apply(result, _toConsumableArray(childs));\n        });\n      }\n\n      return result;\n    } // updatePageData = () => {\n    //   var searchObject = {}\n    //   searchObject.keyword = ''\n    //   searchObject.pageIndex = this.state.page + 1\n    //   searchObject.pageSize = this.state.rowsPerPage\n    //   getAllByRoot().then(({ data }) => {\n    //     var itemList = [...data];\n    //     var list = [];\n    //     itemList.forEach(item => {\n    //       var items = this.getListItemChild(item);\n    //       list.push(...items);\n    //     });\n    //     this.setState({ itemList: list });\n    //   })\n    // }\n    // setPage = (page) => {\n    //   this.setState({ page }, function () {\n    //     this.updatePageData()\n    //   })\n    // }\n    // setRowsPerPage = (event) => {\n    //   this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\n    //     this.updatePageData()\n    //   })\n    // }\n    // handleChangePage = (event, newPage) => {\n    //   this.setPage(newPage)\n    // }\n    // handleOKEditClose = () => {\n    //   this.setState(\n    //     {\n    //       shouldOpenEditorDialog: false,\n    //       shouldOpenConfirmationDialog: false,\n    //     },\n    //     () => {\n    //       this.updatePageData()\n    //     }\n    //   )\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var employees = this.state.employees;\n      var TitlePage = t('menu.title');\n      var columns = [{\n        title: t('general.action'),\n        field: 'custom',\n        align: 'left',\n        width: '120px',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        } // render: (rowData) => (\n        //   <MaterialButton\n        //     item={rowData}\n        //     onSelect={(rowData, method) => {\n        //       if (method === 0) {\n        //         getItemById(rowData.id).then(({ data }) => {\n        //           if (data.parent === null) {\n        //             data.parent = {}\n        //           }\n        //           this.setState({\n        //             item: data,\n        //             shouldOpenEditorDialog: true,\n        //           })\n        //         })\n        //       } else if (method === 1) {\n        //         this.handleDelete(rowData.id)\n        //       } else {\n        //         alert('Call Selected Here:' + rowData.id)\n        //       }\n        //     }}\n        //   />\n        // ),\n\n      }, {\n        title: \"ID\",\n        field: \"id\"\n      }, {\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Age\",\n        field: \"age\"\n      }, {\n        title: t('menu.name'),\n        field: 'name',\n        width: '150',\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t('menu.code'),\n        field: 'code',\n        align: 'left',\n        width: '150',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }, TitlePage, \" | \", t('web_site'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: TitlePage\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleOpenDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }\n      }, \"Add new employee\"), /*#__PURE__*/React.createElement(EmployeeDialog, {\n        open: this.state.openDialog,\n        onClose: this.handleCloseDialog,\n        onSave: this.handleSaveNewEmployee,\n        newEmployee: this.state.newEmployee,\n        onChange: this.handleChangeNewEmployee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n              to = _ref.to,\n              count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return Employee;\n}(React.Component);\n\nexport default Employee;","map":{"version":3,"sources":["D:/client/src/app/views/Employee/Employee.jsx"],"names":["Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Tooltip","FormControl","Input","InputAdornment","createMuiTheme","React","Component","useState","useEffect","ValidatorForm","TextValidator","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getFlatRootChild","getAllByRoot","deleteItem","searchEmployee","createEmployee","saveItem","getItemById","getAllItem","deleteCheckItem","EmployeeDialog","Breadcrumb","ConfirmationDialog","Helmet","withStyles","SearchIcon","Link","NotificationPopup","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","width","MaterialButton","props","t","i18n","item","onSelect","Employee","state","openDialog","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","keyword","shouldOpenNotificationPopup","Notification","handleOpenDialog","setState","handleChangeNewEmployee","name","event","newEmployee","target","value","handleSaveNewEmployee","saveNewEmployee","handleCloseDialog","handleDelete","id","handleDialogClose","updatePageData","handleOKEditClose","setPage","handleConfirmationResponse","length","count","then","handleEditItem","console","log","handleDeleteButtonClick","handleDeleteAll","handleDeleteList","employees","showForm","email","age","address","code","commune","district","province","handleTextChange","bind","searchObject","phone","employee","res","result","root","description","icon","path","parentId","push","children","forEach","child","childs","getListItemChild","TitlePage","columns","title","field","align","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","from","to","handleChangePage","setRowsPerPage"],"mappings":";;;;;;;;;;AAAA,SACIA,IADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,IAJJ,EAKIC,MALJ,EAMIC,SANJ,EAOIC,SAPJ,EAQIC,QARJ,EASIC,QATJ,EAUIC,eAVJ,EAWIC,OAXJ,EAYIC,WAZJ,EAaIC,KAbJ,EAaWC,cAbX,QAcS,mBAdT;AAeE,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,aAAP,IACEC,aADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,YAJF,QAKO,gBALP;AAMA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,UARF,EASEC,eATF,QAUO,mBAVP;AAWA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,OAA/C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,IAAMC,YAAY,GAAGJ,UAAU,CAAC,UAACK,KAAD;AAAA,SAAY;AAC1CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KAD/B;AAEPC,MAAAA,KAAK,EAAE,qBAFA;AAGPC,MAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAHJ;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,QAAQ,EAAE,UALH;AAMPC,MAAAA,GAAG,EAAE,OANE;AAOPC,MAAAA,IAAI,EAAE,OAPC;AAQPC,MAAAA,KAAK,EAAE;AARA;AADiC,GAAZ;AAAA,CAAD,CAAV,CAWjBlD,OAXiB,CAArB;;AAYA,SAASmD,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,wBACTpC,cAAc,EADL;AAAA,MACrBqC,CADqB,mBACrBA,CADqB;AAAA,MAClBC,IADkB,mBAClBA,IADkB;;AAE7B,MAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,CAAC,CAAC,kBAAD,CAAtB;AAA4C,IAAA,SAAS,EAAC,WAAtD;AAAkE,IAAA,UAAU,EAAE,GAA9E;AAAmF,IAAA,UAAU,EAAE,GAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMD,KAAK,CAACI,QAAN,CAAeD,IAAf,EAAqB,CAArB,CAAN;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF,eAME,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,CAAC,CAAC,oBAAD,CAAtB;AAA8C,IAAA,SAAS,EAAC,WAAxD;AAAoE,IAAA,UAAU,EAAE,GAAhF;AAAqF,IAAA,UAAU,EAAE,GAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMD,KAAK,CAACI,QAAN,CAAeD,IAAf,EAAqB,CAArB,CAAN;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CANF,CADF;AAcD;;IACKE,Q;;;;;AAeJ,oBAAYL,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAdnBM,KAcmB,GAdX;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,WAAW,EAAE,CAFP;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,aAAa,EAAE,CALT;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,sBAAsB,EAAE,KAPlB;AAQNC,MAAAA,4BAA4B,EAAE,KARxB;AASNC,MAAAA,qCAAqC,EAAE,KATjC;AAUNC,MAAAA,OAAO,EAAE,EAVH;AAWNC,MAAAA,2BAA2B,EAAE,KAXvB;AAYNC,MAAAA,YAAY,EAAE;AAZR,KAcW;;AAAA,UAqBnBC,gBArBmB,GAqBA,YAAM;AACvB,YAAKC,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KAvBkB;;AAAA,UAwBnBc,uBAxBmB,GAwBO,UAACC,IAAD;AAAA,aAAU,UAACC,KAAD,EAAW;AAC7C,cAAKH,QAAL,CAAc;AAAEI,UAAAA,WAAW,kCAAO,MAAKlB,KAAL,CAAWkB,WAAlB;AAA+B,aAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAApD;AAAb,SAAd;AACD,OAFyB;AAAA,KAxBP;;AAAA,UA4BnBC,qBA5BmB,GA4BK,YAAM;AAC5B;AACA,YAAK3B,KAAL,CAAW4B,eAAX,CAA2B,MAAKtB,KAAL,CAAWkB,WAAtC;;AACA,YAAKK,iBAAL;AACD,KAhCkB;;AAAA,UAkCnBA,iBAlCmB,GAkCC,YAAM;AACxB,YAAKT,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KApCkB;;AAAA,UA6HnBuB,YA7HmB,GA6HJ,UAACC,EAAD,EAAQ;AACrB,YAAKX,QAAL,CAAc;AACZW,QAAAA,EAAE,EAAFA,EADY;AAEZjB,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAlIkB;;AAAA,UAmInBkB,iBAnImB,GAmIC,YAAM;AACxB,YAAKZ,QAAL,CACE;AACEP,QAAAA,sBAAsB,EAAE,KAD1B;AAEEC,QAAAA,4BAA4B,EAAE,KAFhC;AAGEC,QAAAA,qCAAqC,EAAE,KAHzC;AAIEE,QAAAA,2BAA2B,EAAE,KAJ/B;AAKEP,QAAAA,IAAI,EAAE;AALR,OADF,EAQE,YAAM;AACJ,cAAKuB,cAAL;AACD,OAVH;AAYD,KAhJkB;;AAAA,UAkJnBC,iBAlJmB,GAkJC,YAAM;AACxB,YAAKd,QAAL,CAAc;AACZP,QAAAA,sBAAsB,EAAE,KADZ;AAEZC,QAAAA,4BAA4B,EAAE,KAFlB;AAGZC,QAAAA,qCAAqC,EAAE;AAH3B,OAAd;;AAKA,YAAKoB,OAAL,CAAa,CAAb;AACD,KAzJkB;;AAAA,UA2JnBL,YA3JmB,GA2JJ,UAACC,EAAD,EAAQ;AACrB,YAAKX,QAAL,CAAc;AACZW,QAAAA,EAAE,EAAFA,EADY;AAEZjB,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAhKkB;;AAAA,UAkKnBsB,0BAlKmB,GAkKU,YAAM;AACjC,UAAI,MAAK9B,KAAL,CAAWM,QAAX,CAAoByB,MAApB,KAA+B,CAA/B,IAAoC,MAAK/B,KAAL,CAAWG,IAAX,KAAoB,CAA5D,EAA+D;AAC7D,YAAI6B,KAAK,GAAG,MAAKhC,KAAL,CAAWG,IAAX,GAAkB,CAA9B;;AACA,cAAKW,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAE6B;AADM,SAAd;AAGD;;AACDrE,MAAAA,UAAU,CAAC,MAAKqC,KAAL,CAAWyB,EAAZ,CAAV,CAA0BQ,IAA1B,CAA+B,YAAM;AACnC,cAAKN,cAAL;;AACA,cAAKD,iBAAL;AACD,OAHD;AAID,KA7KkB;;AAAA,UA8KnBQ,cA9KmB,GA8KF,UAACrC,IAAD,EAAU;AACzBsC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,YAAKtB,QAAL,CAAc;AACZjB,QAAAA,IAAI,EAAEA,IADM;AAEZU,QAAAA,sBAAsB,EAAE;AAFZ,OAAd;AAMD,KAtLkB;;AAAA,UAuLnB8B,uBAvLmB,GAuLO,YAAM;AAC9B,UACE,OAAO,MAAKrC,KAAL,CAAWI,IAAlB,KAA2B,WAA3B,IACA,MAAKJ,KAAL,CAAWI,IAAX,CAAgB2B,MAAhB,KAA2B,CAF7B,EAGE;AACA,cAAKjB,QAAL,CAAc;AACZH,UAAAA,2BAA2B,EAAE,IADjB;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd,EADA,CAKA;;AACD,OATD,MASO;AACL,cAAKE,QAAL,CAAc;AAAEL,UAAAA,qCAAqC,EAAE;AAAzC,SAAd;AACD;AACF,KApMkB;;AAAA,UAqMnB6B,eArMmB,GAqMD,UAACrB,KAAD,EAAW;AAC3B,YAAKsB,gBAAL,CAAsB,MAAKvC,KAAL,CAAWI,IAAjC,EAAuC6B,IAAvC,CAA4C,YAAM;AAChD,cAAKN,cAAL,GADgD,CAEhD;;AACD,OAHD;AAID,KA1MkB;;AAEf,UAAK3B,KAAL,GAAa;AACXwC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXzB,MAAAA,IAAI,EAAE,EAHK;AAIX0B,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,GAAG,EAAE,EALM;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,IAAI,EAAC,EAPM;AAQXC,MAAAA,OAAO,EAAC,EARG;AASXC,MAAAA,QAAQ,EAAC,EATE;AAUXC,MAAAA,QAAQ,EAAC;AAVE,KAAb;AAcF,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AAhBiB;AAiBlB;;;;WACD,0BAAiBjC,KAAjB,EAAwB;AACtB,WAAKH,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACD;;;WAiBD;AACA;AACA;AACA;AACA;;wFACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACU+B,gBAAAA,YADV,GACyB;AACjBnC,kBAAAA,IAAI,EAAC,EADY;AAEjBS,kBAAAA,EAAE,EAAC,EAFc;AAGjBiB,kBAAAA,KAAK,EAAC,EAHW;AAIjBC,kBAAAA,GAAG,EAAC,EAJa;AAKjBE,kBAAAA,IAAI,EAAC,EALY;AAMjBO,kBAAAA,KAAK,EAAC;AANW,iBADzB,EAQS;;AART;AAAA,uBAS6BxF,cAAc,CAACuF,YAAD,CAT3C;;AAAA;AASYE,gBAAAA,QATZ;AAUM,qBAAKvC,QAAL,CAAc;AAAEuC,kBAAAA,QAAQ,EAARA;AAAF,iBAAd;AACAlB,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAxE,gBAAAA,cAAc,CAAC,EAAD,CAAd,CACGqE,IADH,CACQ,UAAAqB,GAAG,EAAG;AACVnB,kBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAAClD,IAAJ,CAASA,IAArB;;AACA,kBAAA,MAAI,CAACU,QAAL,CAAc;AACZ0B,oBAAAA,SAAS,EAACc,GAAG,CAAClD,IAAJ,CAASA;AADP,mBAAd;AAGD,iBANH;AAOJ,qBAAKuB,cAAL;;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAqBA,0BAAiB9B,IAAjB,EAAuB;AAAA;;AACrB,UAAI0D,MAAM,GAAG,EAAb;AACA,UAAIC,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACxC,IAAL,GAAYnB,IAAI,CAACmB,IAAjB;AACAwC,MAAAA,IAAI,CAACC,WAAL,GAAmB5D,IAAI,CAAC4D,WAAxB;AACAD,MAAAA,IAAI,CAACX,IAAL,GAAYhD,IAAI,CAACgD,IAAjB;AACAW,MAAAA,IAAI,CAACE,IAAL,GAAY7D,IAAI,CAAC6D,IAAjB;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAY9D,IAAI,CAAC8D,IAAjB;AACAH,MAAAA,IAAI,CAAC/B,EAAL,GAAU5B,IAAI,CAAC4B,EAAf;AACA+B,MAAAA,IAAI,CAACI,QAAL,GAAgB/D,IAAI,CAAC+D,QAArB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAYL,IAAZ;;AACA,UAAI3D,IAAI,CAACiE,QAAT,EAAmB;AACjBjE,QAAAA,IAAI,CAACiE,QAAL,CAAcC,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC7B,cAAIC,MAAM,GAAG,MAAI,CAACC,gBAAL,CAAsBF,KAAtB,CAAb;;AACAT,UAAAA,MAAM,CAACM,IAAP,OAAAN,MAAM,qBAASU,MAAT,EAAN;AACD,SAHD;AAID;;AACD,aAAOV,MAAP;AACD,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WAgFA,kBAAS;AAAA,wBACe,KAAK7D,KADpB;AAAA,UACGC,CADH,eACGA,CADH;AAAA,UACMC,IADN,eACMA,IADN;AAAA,wBAE0C,KAAKI,KAF/C;AAAA,UAECU,OAFD,eAECA,OAFD;AAAA,UAEUC,2BAFV,eAEUA,2BAFV;AAAA,UAGG6B,SAHH,GAGiB,KAAKxC,KAHtB,CAGGwC,SAHH;AAKL,UAAI2B,SAAS,GAAGxE,CAAC,CAAC,YAAD,CAAjB;AAEA,UAAIyE,OAAO,GAAG,CACV;AACIC,QAAAA,KAAK,EAAE1E,CAAC,CAAC,gBAAD,CADZ;AAEI2E,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,KAAK,EAAE,MAHX;AAII/E,QAAAA,KAAK,EAAE,OAJX;AAKIgF,QAAAA,WAAW,EAAE;AACXC,UAAAA,QAAQ,EAAE,OADC;AAEXC,UAAAA,WAAW,EAAE,KAFF;AAGXC,UAAAA,YAAY,EAAE;AAHH,SALjB;AAUIC,QAAAA,SAAS,EAAE;AACTH,UAAAA,QAAQ,EAAE,OADD;AAETC,UAAAA,WAAW,EAAE,KAFJ;AAGTC,UAAAA,YAAY,EAAE,KAHL;AAITE,UAAAA,SAAS,EAAE;AAJF,SAVf,CAgBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArCJ,OADU,EAwCV;AAAER,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAxCU,EAyCV;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAzCU,EA0CV;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OA1CU,EA2CZ;AACED,QAAAA,KAAK,EAAE1E,CAAC,CAAC,WAAD,CADV;AACyB2E,QAAAA,KAAK,EAAE,MADhC;AACwC9E,QAAAA,KAAK,EAAE,KAD/C;AAEEgF,QAAAA,WAAW,EAAE;AACXC,UAAAA,QAAQ,EAAE,OADC;AAEXC,UAAAA,WAAW,EAAE,MAFF;AAGXC,UAAAA,YAAY,EAAE;AAHH,SAFf;AAOEC,QAAAA,SAAS,EAAE;AACTH,UAAAA,QAAQ,EAAE,OADD;AAETC,UAAAA,WAAW,EAAE,MAFJ;AAGTC,UAAAA,YAAY,EAAE,KAHL;AAITE,UAAAA,SAAS,EAAE;AAJF;AAPb,OA3CY,EAyDZ;AACER,QAAAA,KAAK,EAAE1E,CAAC,CAAC,WAAD,CADV;AACyB2E,QAAAA,KAAK,EAAE,MADhC;AACwCC,QAAAA,KAAK,EAAE,MAD/C;AACuD/E,QAAAA,KAAK,EAAE,KAD9D;AAEEgF,QAAAA,WAAW,EAAE;AACXC,UAAAA,QAAQ,EAAE,OADC;AAEXC,UAAAA,WAAW,EAAE,MAFF;AAGXC,UAAAA,YAAY,EAAE;AAHH,SAFf;AAOEC,QAAAA,SAAS,EAAE;AACTH,UAAAA,QAAQ,EAAE,OADD;AAETC,UAAAA,WAAW,EAAE,MAFJ;AAGTC,UAAAA,YAAY,EAAE,KAHL;AAITE,UAAAA,SAAS,EAAE;AAJF;AAPb,OAzDY,CAAd;AAyEA,0BAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQV,SAAR,SAAsBxE,CAAC,CAAC,UAAD,CAAvB,CADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,UAAD;AACE,QAAA,aAAa,EAAE,CACb;AAAEqB,UAAAA,IAAI,EAAErB,CAAC,CAAC,kBAAD,CAAT;AAA+BgE,UAAAA,IAAI,EAAE;AAArC,SADa,EAEb;AAAE3C,UAAAA,IAAI,EAAEmD;AAAR,SAFa,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,eAaE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,KAAKtD,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,eAEJ,oBAAC,cAAD;AACE,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,UADnB;AAEE,QAAA,OAAO,EAAE,KAAKsB,iBAFhB;AAGE,QAAA,MAAM,EAAE,KAAKF,qBAHf;AAIE,QAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWkB,WAJ1B;AAKE,QAAA,QAAQ,EAAE,KAAKH,uBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,eAmBE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,CAHtB;AAIE,QAAA,SAAS,EAAC,KAJZ;AAKE,QAAA,gBAAgB,EAAEpB,CAAC,CAAC,uBAAD,CALrB;AAME,QAAA,kBAAkB,EAAE;AAAA,cAAGmF,IAAH,QAAGA,IAAH;AAAA,cAASC,EAAT,QAASA,EAAT;AAAA,cAAa/C,KAAb,QAAaA,KAAb;AAAA,2BAA4B8C,IAA5B,cAAoCC,EAApC,cAA0CpF,CAAC,CAAC,YAAD,CAA3C,cAA6DqC,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,uBAAoC+C,EAApC,CAA7D;AAAA,SANtB;AAOE,QAAA,KAAK,EAAE,KAAK/E,KAAL,CAAWK,aAPpB;AAQE,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWE,WAR1B;AASE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IATnB;AAUE,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK,SAVvB;AAaE,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK,SAbvB;AAgBE,QAAA,YAAY,EAAE,KAAK6E,gBAhBrB;AAiBE,QAAA,mBAAmB,EAAE,KAAKC,cAjB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF,CAbF,CAFF;AA0DD;;;;EApWkBtI,KAAK,CAACC,S;;AAsW3B,eAAemD,QAAf","sourcesContent":["import {\r\n    Grid,\r\n    TextField,\r\n    IconButton,\r\n    Icon,\r\n    Button,\r\n    TableHead,\r\n    TableCell,\r\n    TableRow,\r\n    Checkbox,\r\n    TablePagination,\r\n    Tooltip,\r\n    FormControl,\r\n    Input, InputAdornment,\r\n  } from '@material-ui/core'\r\n  import { createMuiTheme } from '@material-ui/core/styles'\r\n  import React, { Component,useState, useEffect } from 'react'\r\n  import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\n  import MaterialTable, {\r\n    MTableToolbar,\r\n    Chip,\r\n    MTableBody,\r\n    MTableHeader,\r\n  } from 'material-table'\r\n  import { useTranslation, withTranslation, Trans } from 'react-i18next'\r\n  import {\r\n    getFlatRootChild,\r\n    getAllByRoot,\r\n    deleteItem,\r\n    searchEmployee,\r\n    createEmployee,\r\n    saveItem,\r\n    getItemById,\r\n    getAllItem,\r\n    deleteCheckItem\r\n  } from './EmployeeService'\r\n  import EmployeeDialog from './EmployeeDialog'\r\n  import { Breadcrumb, ConfirmationDialog } from 'egret'\r\n  import { Helmet } from 'react-helmet'\r\n  import { withStyles } from '@material-ui/core/styles'\r\n  import SearchIcon from '@material-ui/icons/Search'; \r\n  import { Link } from \"react-router-dom\";\r\n  import NotificationPopup from '../Component/NotificationPopup/NotificationPopup'\r\n  const LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      boxShadow: theme.shadows[1],\r\n      fontSize: 11,\r\n      position: \"absolute\",\r\n      top: '-15px',\r\n      left: '-30px',\r\n      width: '80px'\r\n    }\r\n  }))(Tooltip);\r\n  function MaterialButton(props) {\r\n    const { t, i18n } = useTranslation()\r\n    const item = props.item\r\n    return (\r\n      <div className=\"none_wrap\">\r\n        <LightTooltip title={t('general.editIcon')} placement=\"right-end\" enterDelay={300} leaveDelay={200}>\r\n          <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n            <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title={t('general.deleteIcon')} placement=\"right-end\" enterDelay={300} leaveDelay={200}>\r\n          <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n            <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </div>\r\n    )\r\n  }\r\n  class Employee extends React.Component {\r\n    state = {\r\n      openDialog: false,\r\n      rowsPerPage: 5,\r\n      page: 0,\r\n      data: [],\r\n      totalElements: 0,\r\n      itemList: [],\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false,\r\n      keyword: '',\r\n      shouldOpenNotificationPopup: false,\r\n      Notification: ''\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          employees: [],\r\n          showForm: false,\r\n          name: \"\",\r\n          email: \"\",\r\n          age: \"\",\r\n          address: \"\",\r\n          code:\"\",\r\n          commune:\"\",\r\n          district:\"\",\r\n          province:\"\"\r\n         \r\n          \r\n        };\r\n      this.handleTextChange = this.handleTextChange.bind(this)\r\n    }\r\n    handleTextChange(event) {\r\n      this.setState({ keyword: event.target.value })\r\n    }\r\n    handleOpenDialog = () => {\r\n      this.setState({ openDialog: true });\r\n    };\r\n    handleChangeNewEmployee = (name) => (event) => {\r\n      this.setState({ newEmployee: { ...this.state.newEmployee, [name]: event.target.value } });\r\n    };\r\n    \r\n    handleSaveNewEmployee = () => {\r\n      // Lưu trữ dữ liệu mới và đóng dialog\r\n      this.props.saveNewEmployee(this.state.newEmployee);\r\n      this.handleCloseDialog();\r\n    };\r\n    \r\n    handleCloseDialog = () => {\r\n      this.setState({ openDialog: false });\r\n    };\r\n    // handleKeyDownEnterSearch = (e) => {\r\n    //   if (e.key === 'Enter') {\r\n    //     this.search()\r\n    //   }\r\n    // }\r\n    async componentDidMount() {\r\n        const searchObject = {\r\n            name:'',\r\n            id:'',\r\n            email:'',\r\n            age:'',\r\n            code:'',\r\n            phone:''\r\n          }; // assume we have an employee ID\r\n          const employee = await searchEmployee(searchObject);\r\n          this.setState({ employee });\r\n          console.log(\"khanh\");\r\n          searchEmployee({})\r\n            .then(res =>{\r\n              console.log(res.data.data);\r\n              this.setState({\r\n                employees:res.data.data\r\n              });\r\n            })\r\n      this.updatePageData()\r\n    }\r\n    getListItemChild(item) {\r\n      var result = [];\r\n      var root = {};\r\n      root.name = item.name;\r\n      root.description = item.description;\r\n      root.code = item.code;\r\n      root.icon = item.icon;\r\n      root.path = item.path;\r\n      root.id = item.id;\r\n      root.parentId = item.parentId;\r\n      result.push(root);\r\n      if (item.children) {\r\n        item.children.forEach(child => {\r\n          var childs = this.getListItemChild(child);\r\n          result.push(...childs);\r\n        });\r\n      }\r\n      return result;\r\n    }\r\n    // updatePageData = () => {\r\n    //   var searchObject = {}\r\n    //   searchObject.keyword = ''\r\n    //   searchObject.pageIndex = this.state.page + 1\r\n    //   searchObject.pageSize = this.state.rowsPerPage\r\n    //   getAllByRoot().then(({ data }) => {\r\n    //     var itemList = [...data];\r\n    //     var list = [];\r\n    //     itemList.forEach(item => {\r\n    //       var items = this.getListItemChild(item);\r\n    //       list.push(...items);\r\n    //     });\r\n    //     this.setState({ itemList: list });\r\n    //   })\r\n    // }\r\n    // setPage = (page) => {\r\n    //   this.setState({ page }, function () {\r\n    //     this.updatePageData()\r\n    //   })\r\n    // }\r\n  \r\n    // setRowsPerPage = (event) => {\r\n    //   this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n    //     this.updatePageData()\r\n    //   })\r\n    // }\r\n  \r\n    // handleChangePage = (event, newPage) => {\r\n    //   this.setPage(newPage)\r\n    // }\r\n  \r\n    // handleOKEditClose = () => {\r\n    //   this.setState(\r\n    //     {\r\n    //       shouldOpenEditorDialog: false,\r\n    //       shouldOpenConfirmationDialog: false,\r\n    //     },\r\n    //     () => {\r\n    //       this.updatePageData()\r\n    //     }\r\n    //   )\r\n    // }\r\n  \r\n    handleDelete = (id) => {\r\n      this.setState({\r\n        id,\r\n        shouldOpenConfirmationDialog: true,\r\n      })\r\n    }\r\n    handleDialogClose = () => {\r\n      this.setState(\r\n        {\r\n          shouldOpenEditorDialog: false,\r\n          shouldOpenConfirmationDialog: false,\r\n          shouldOpenConfirmationDeleteAllDialog: false,\r\n          shouldOpenNotificationPopup: false,\r\n          data: [],\r\n        },\r\n        () => {\r\n          this.updatePageData()\r\n        }\r\n      )\r\n    }\r\n  \r\n    handleOKEditClose = () => {\r\n      this.setState({\r\n        shouldOpenEditorDialog: false,\r\n        shouldOpenConfirmationDialog: false,\r\n        shouldOpenConfirmationDeleteAllDialog: false,\r\n      })\r\n      this.setPage(0)\r\n    }\r\n  \r\n    handleDelete = (id) => {\r\n      this.setState({\r\n        id,\r\n        shouldOpenConfirmationDialog: true,\r\n      })\r\n    }\r\n  \r\n    handleConfirmationResponse = () => {\r\n      if (this.state.itemList.length === 1 && this.state.page === 1) {\r\n        let count = this.state.page - 1\r\n        this.setState({\r\n          page: count,\r\n        })\r\n      }\r\n      deleteItem(this.state.id).then(() => {\r\n        this.updatePageData();\r\n        this.handleDialogClose()\r\n      })\r\n    }\r\n    handleEditItem = (item) => {\r\n      console.log(\"khanhdialog\")\r\n      this.setState({\r\n        item: item,\r\n        shouldOpenEditorDialog: true,\r\n        \r\n      })\r\n  \r\n    }\r\n    handleDeleteButtonClick = () => {\r\n      if (\r\n        typeof this.state.data === 'undefined' ||\r\n        this.state.data.length === 0\r\n      ) {\r\n        this.setState({\r\n          shouldOpenNotificationPopup: true,\r\n          Notification: \"general.noti_check_data\"\r\n        })\r\n        // alert('Chưa chọn dữ liệu')\r\n      } else {\r\n        this.setState({ shouldOpenConfirmationDeleteAllDialog: true })\r\n      }\r\n    }\r\n    handleDeleteAll = (event) => {\r\n      this.handleDeleteList(this.state.data).then(() => {\r\n        this.updatePageData()\r\n        // this.handleDialogClose()\r\n      })\r\n    }\r\n    render() {\r\n        const { t, i18n } = this.props\r\n        let { keyword, shouldOpenNotificationPopup } = this.state\r\n        const { employees } = this.state;\r\n\r\n        let TitlePage = t('menu.title')\r\n    \r\n        let columns = [\r\n            {\r\n                title: t('general.action'),\r\n                field: 'custom',\r\n                align: 'left',\r\n                width: '120px',\r\n                headerStyle: {\r\n                  minWidth: \"100px\",\r\n                  paddingLeft: \"0px\",\r\n                  paddingRight: \"0px\",\r\n                },\r\n                cellStyle: {\r\n                  minWidth: \"100px\",\r\n                  paddingLeft: \"0px\",\r\n                  paddingRight: \"0px\",\r\n                  textAlign: \"left\",\r\n                },\r\n                // render: (rowData) => (\r\n                //   <MaterialButton\r\n                //     item={rowData}\r\n                //     onSelect={(rowData, method) => {\r\n                //       if (method === 0) {\r\n                //         getItemById(rowData.id).then(({ data }) => {\r\n                //           if (data.parent === null) {\r\n                //             data.parent = {}\r\n                //           }\r\n                //           this.setState({\r\n                //             item: data,\r\n                //             shouldOpenEditorDialog: true,\r\n                //           })\r\n                //         })\r\n                //       } else if (method === 1) {\r\n                //         this.handleDelete(rowData.id)\r\n                //       } else {\r\n                //         alert('Call Selected Here:' + rowData.id)\r\n                //       }\r\n                //     }}\r\n                //   />\r\n                // ),\r\n              },\r\n            { title: \"ID\", field: \"id\" },\r\n            { title: \"Name\", field: \"name\" },\r\n            { title: \"Age\", field: \"age\" },\r\n          {\r\n            title: t('menu.name'), field: 'name', width: '150',\r\n            headerStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n            },\r\n            cellStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              textAlign: \"left\",\r\n            },\r\n          },\r\n          {\r\n            title: t('menu.code'), field: 'code', align: 'left', width: '150',\r\n            headerStyle: {\r\n              minWidth: \"100px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n            },\r\n            cellStyle: {\r\n              minWidth: \"100px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              textAlign: \"left\",\r\n            },\r\n          },\r\n    \r\n        ]\r\n        return (\r\n          \r\n          <div className=\"m-sm-30\">\r\n            <Helmet>\r\n              <title>{TitlePage} | {t('web_site')}</title>\r\n            </Helmet>\r\n            <div className=\"mb-sm-30\">\r\n              {/* <Breadcrumb routeSegments={[{ name: t('Supplier.title') }]} /> */}\r\n              <Breadcrumb\r\n                routeSegments={[\r\n                  { name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },\r\n                  { name: TitlePage },\r\n                ]}\r\n              />\r\n            </div>\r\n            <Grid container spacing={2} justify=\"space-between\">\r\n              <Grid item lg={3} md={3} xs={12} >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleOpenDialog}>Add new employee</Button>\r\n          <EmployeeDialog\r\n            open={this.state.openDialog}\r\n            onClose={this.handleCloseDialog}\r\n            onSave={this.handleSaveNewEmployee}\r\n            newEmployee={this.state.newEmployee}\r\n            onChange={this.handleChangeNewEmployee}\r\n          />\r\n                {/* <Button\r\n                  className=\"align-bottom mb-16\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleDeleteButtonClick}\r\n                >\r\n                  {t('general.delete')}\r\n                </Button> */}\r\n    \r\n                \r\n                <TablePagination\r\n                  align=\"left\"\r\n                  className=\"px-16\"\r\n                  rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n                  component=\"div\"\r\n                  labelRowsPerPage={t('general.rows_per_page')}\r\n                  labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n                  count={this.state.totalElements}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  backIconButtonProps={{\r\n                    'aria-label': 'Previous Page',\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    'aria-label': 'Next Page',\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.setRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    export default Employee;\r\n    "]},"metadata":{},"sourceType":"module"}